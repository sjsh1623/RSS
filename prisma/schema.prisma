generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model article {
  id        Int                    @id @default(autoincrement())
  title     String
  link      String?
  linkHash  String                 @unique @db.VarChar(64)
  pubDate   DateTime               @db.Timestamp(6)
  source    String
  category  String
  language  String
  url       String
  context   String?
  createdAt DateTime               @default(now()) @db.Timestamp(6)
  embedding Unsupported("vector")?
  context_tsv Unsupported("tsvector")?

  @@index([category], map: "idx_category_article")
  @@index([language], map: "idx_language_article")
}

model rss {
  id         Int       @id(map: "rss_source_pkey") @default(autoincrement())
  url        String    @unique(map: "rss_source_url_key")
  language   String
  is_active  Boolean?  @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  source     String    @db.VarChar(20)
}

model category {
  id          Int           @id @default(autoincrement())
  code        String        @unique
  name        String
  is_active   Boolean       @default(true)
  subcategory subcategory[]
}

model subcategory {
  id          Int      @id @default(autoincrement())
  category_id Int
  code        String   @unique
  name        String
  is_active   Boolean  @default(true)
  category    category @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?  @db.VarChar(100)
  createdAt DateTime @default(now())
}
